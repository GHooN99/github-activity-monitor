name: Monitor Open Source Activity

on:
  schedule:
    # 예: 2시간마다 실행 (UTC 기준)
    - cron: "0 */2 * * *"
  workflow_dispatch: # 수동 실행 가능

jobs:
  monitor_and_notify:
    runs-on: ubuntu-latest
    # Prevent concurrent runs for the same workflow triggered by schedule
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false # Important for committing state file with default token

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # package.json engines 참조
          cache: "npm"

      - name: Install dependencies
        run: npm ci # Use package-lock.json for consistent installs

      - name: Build TypeScript
        run: npm run build

      # - name: Run Monitoring and Notification Script
      #   env:
      #     # --- Secrets ---
      #     GITHUB_PAT: ${{ secrets.GH_PAT }} # GitHub PAT (read:discussion)
      #     DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      #     # LLM Keys (only provide the one needed based on LLM_PROVIDER variable)
      #     CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      #     OPENAI_API_KEY: ${{ secrets.OPENAI_KEY }}
      #     GOOGLE_API_KEY: ${{ secrets.GOOGLE_KEY }}
      #     # SLACK_WEBHOOK_URL: ${{ secrets.SLACK_HOOK }}

      #     # --- Variables (or Secrets if sensitive repo list) ---
      #     # Ensure this is a valid JSON string array
      #     REPO_CONFIGS: ${{ vars.REPO_CONFIGS || '[{"name": "vercel/next.js", "monitorTypes": ["discussion", "comment"]}]' }}
      #     STATE_FILE_PATH: ${{ vars.STATE_FILE_PATH || 'state.json' }}
      #     MAX_ITEMS_PER_RUN: ${{ vars.MAX_ITEMS_PER_RUN || 10 }}
      #     SUMMARIZATION_ENABLED: ${{ vars.SUMMARIZATION_ENABLED || 'true' }}
      #     LLM_PROVIDER: ${{ vars.LLM_PROVIDER || 'gemini' }}
      #     LLM_MODEL_NAME: ${{ vars.LLM_MODEL_NAME }} # Optional, defaults in code
      #     CLOUDFLARE_ACCOUNT_ID: ${{ vars.CF_ACCOUNT_ID }} # Required for Cloudflare
      #   run: node dist/main.js

      # - name: Commit and push updated state file
      #   env:
      #      STATE_FILE_PATH: ${{ vars.STATE_FILE_PATH || 'state.json' }}
      #   run: |
      #     # Check if the state file exists and has changes
      #     if [ -f "${STATE_FILE_PATH}" ] && ! git diff --quiet "${STATE_FILE_PATH}"; then
      #       echo "State file changed. Committing and pushing..."
      #       git config --global user.name 'github-actions[bot]'
      #       git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      #       # Use default GITHUB_TOKEN which has write permissions for commits
      #       git add "${STATE_FILE_PATH}"
      #       git commit -m "Update state file [skip ci]"
      #       # Retry push in case of minor transient issues
      #       git push || (sleep 5 && git push) || (sleep 10 && git push)
      #     else
      #       echo "State file unchanged or not found. No commit needed."
      #     fi
