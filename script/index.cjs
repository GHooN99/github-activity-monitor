"use strict";var g=Object.create;var c=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var L=Object.getPrototypeOf,I=Object.prototype.hasOwnProperty;var P=(e,t,i,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of v(t))!I.call(e,s)&&s!==i&&c(e,s,{get:()=>t[s],enumerable:!(r=E(t,s))||r.enumerable});return e};var M=(e,t,i)=>(i=e!=null?g(L(e)):{},P(t||!e||!e.__esModule?c(i,"default",{value:e,enumerable:!0}):i,e));var a=class{constructor(t){this.dependencies=t}async run(){console.log("ActivityMonitor run starting...");try{let t=this.loadCurrentState(),i=await this.fetchNewActivities(t);if(i.length===0){console.log("No new activities found. Monitoring run finished.");return}console.log(`Found ${i.length} new activities.`);let r=await this.prepareItemsForNotification(i);await this.sendNotifications(r,i.length),this.updateState(t,i),console.log("ActivityMonitor run finished successfully.")}catch(t){console.error("Error during ActivityMonitor run:",t)}}loadCurrentState(){return this.dependencies.stateManager.loadState()}async fetchNewActivities(t){return this.dependencies.fetcher.fetchNewActivities(t)}async prepareItemsForNotification(t){let i=t.slice(-this.dependencies.config.maxItemsPerRun);return this.dependencies.config.summarizationEnabled?await this.dependencies.summarizer.summarizeActivities(i):i}async sendNotifications(t,i){await this.dependencies.notifier.sendNotification(t,i,this.dependencies.config.maxItemsPerRun)}updateState(t,i){let r=this.dependencies.stateManager.calculateNextState(t,i);this.dependencies.stateManager.saveState(r)}};function l(e){return new a({config:e,fetcher:{fetchNewActivities:async()=>[]},stateManager:{loadState:()=>({}),calculateNextState:()=>({}),saveState:()=>{}},summarizer:{summarizeActivities:async()=>[]},notifier:{sendNotification:async()=>{}}})}var u=M(require("dotenv"),1);var o={OPENAI:"openai",GEMINI:"gemini",CLAUDE:"claude",NONE:"none"},b={[o.OPENAI]:"gpt-4o-mini",[o.GEMINI]:"gemini-1.5-flash-latest",[o.CLAUDE]:"claude-3-5-sonnet-20240620",[o.NONE]:""};var m="state.json",p=5,d=!0,f=o.NONE;var n={repoConfigs:[{name:"vercel/next.js",monitorTypes:["discussion","discussion_comment"]},{name:"facebook/react",monitorTypes:["discussion","discussion_comment"]}],stateFilePath:"state.json",maxItemsPerRun:5,summarizationEnabled:!0,llmProvider:"gemini",llmModelName:"gemini-1.5-flash-latest"};u.default.config();function A(){console.log("Loading and validating application configuration...");let e=h(),t=_(),i={...e,...t};return y(i),N(i),console.log("Configuration loading process complete."),i}function h(){return console.log("Assembling configuration from environment variables..."),{githubPat:process.env.GITHUB_PAT||"",openaiApiKey:process.env.OPENAI_API_KEY,geminiApiKey:process.env.GOOGLE_API_KEY,claudeApiKey:process.env.CLAUDE_API_KEY,discordWebhookUrl:process.env.DISCORD_WEBHOOK_URL,slackWebhookUrl:process.env.SLACK_WEBHOOK_URL}}function _(){return{repoConfigs:n.repoConfigs??[],stateFilePath:n.stateFilePath??m,maxItemsPerRun:n.maxItemsPerRun??p,summarizationEnabled:n.summarizationEnabled??d,llmProvider:n.llmProvider??f,llmModelName:n.llmModelName}}function y(e){if(console.log("Validating configuration..."),e.githubPat==="")throw new Error("Missing required config: GITHUB_PAT (Secret)");if(e.repoConfigs.length===0)throw new Error("Missing or invalid required config: RepoConfigs");if(!e.discordWebhookUrl&&!e.slackWebhookUrl)throw console.warn("Warning: No notifier webhook URL configured (DISCORD_WEBHOOK_URL or SLACK_WEBHOOK_URL). Notifications may fail."),new Error("At least one notifier webhook URL is required.");let t={[o.OPENAI]:{isValid:i=>!!i.openaiApiKey,errorMessage:"OpenAI summarization requires OPENAI_API_KEY (Secret)"},[o.GEMINI]:{isValid:i=>!!i.geminiApiKey,errorMessage:"Gemini summarization requires GOOGLE_API_KEY (Secret)"},[o.CLAUDE]:{isValid:i=>!!i.claudeApiKey,errorMessage:"Claude summarization requires CLAUDE_API_KEY (Secret)"}};if(e.summarizationEnabled)if(e.llmProvider===o.NONE)console.warn(`Summarization is enabled but LLM_PROVIDER is '${o.NONE}'. Disabling summarization.`),e.summarizationEnabled=!1;else{e.llmModelName||console.warn(`LLM model name could not be determined for provider: ${e.llmProvider}. Using default or summarization might fail.`);let i=t[e.llmProvider];if(i&&!i.isValid(e))throw new Error(i.errorMessage)}}function N(e){console.log(`--- Monitoring Repos --- 
${e.repoConfigs.map(t=>`repo: ${t.name} - types: ${t.monitorTypes.join(", ")}`).join(`
`)}`),console.log(`State File Path: ${e.stateFilePath}`),e.summarizationEnabled&&console.log(`Summarization Enabled: ${e.summarizationEnabled}, Provider: ${e.llmProvider} - ${e.llmModelName}`)}async function S(){console.log("Bootstrapping application...");try{let e=A();await l(e).run(),console.log("Application run finished successfully.")}catch(e){console.error("Application failed during setup or run:",e),process.exit(1)}}console.log("Starting application...");S();
